@import "@/shared/style/index";

.view_primary {
  @include mixin-ts(background);

  background: var(--button-primary-background);
  box-shadow: var(--button-primary-border-glow);
  position: relative;
  isolation: isolate;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;

    @include mixin-ts(opacity);

    inset: 0;
    background: var(--button-primary-background-hover);
    opacity: 0;
    z-index: -1;
  }

  &:hover::before {
    opacity: 1;
  }

  & .text {
    color: var(--text-light);

    /* letter-spacing: 0.1em; */
  }

  .icon {
    background-color: red;

    &:hover {
      background-color: green;
    }
  }
}

/* View */

/* .view_primary { */

/*   @include mixin-ts(background-position-x); */

/*  */

/*   background: var(--button-primary-background); */

/*   background-position-x: 50%; */

/*   background-size: 150%; */

/*  */

/*   & .text { */

/*     color: var(--text-light); */

/*     text-transform: uppercase; */

/*     letter-spacing: 0.1em; */

/*   } */

/*  */

/*   &:hover { */

/*     background-position-x: 0%; */

/*  */

/*     .icon { */

/*       background-color: green; */

/*     } */

/*   } */

/*  */

/*   .icon { */

/*     background-color: red; */

/*   } */

/* } */

.view_secondary {
  @include mixin-ts(background-position-x);

  background: seagreen;
  background-position-x: 50%;
  background-size: 150%;

  // border: 1px solid transparent;
  // background: $color_light;

  & .text {
    color: white;
    text-transform: uppercase;
    letter-spacing: 0.1em;

    // color: $color_primary;
  }

  &:hover {
    background-position-x: 0%;

    // border-color: $color_secondary;
  }
}

.view_tertiary {
  // background: var(--color-bg-inverted);
  background: red;
  border: 2px solid navajowhite;

  & .text {
    @include mixin-ts(color);

    color: navajowhite;
  }

  &:hover {
    background: blue;

    & .text {
      @include mixin-ts(color);

      color: yellow;
    }
  }
}

.view_transparent {
  @include mixin-ts(background);

  background: transparent;

  & .text {
    @include mixin-ts(color);

    color: blue;
  }

  &:hover {
    background: red;

    & .text {
    }
  }

  &_inverted {
    &:hover {
      // border-color: var(--color-primary-inverted);
      background: violet;
    }

    & .text {
      color: coral;
    }
  }
}
